/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gerenciadorderedes.gui;

import gerenciadorderedes.dao.PerfisDAO;
import gerenciadorderedes.util.Perfis;
import javax.swing.JOptionPane;

/**
 *
 * @author Ricardo
 */
public class Perfil extends javax.swing.JFrame {

    /**
     * Creates new form Preferencias
     */
    public Perfil() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jCheckBoxWPA = new javax.swing.JCheckBox();
        jCheckBoxWPA2 = new javax.swing.JCheckBox();
        jCheckBoxWPAPSK = new javax.swing.JCheckBox();
        jCheckBoxWPA2PSK = new javax.swing.JCheckBox();
        jCheckBoxWEP = new javax.swing.JCheckBox();
        jRadioButtonRuim = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jRadioButtonBom = new javax.swing.JRadioButton();
        jRadioButtonExcelente = new javax.swing.JRadioButton();
        jButtonCriar = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jCheckBoxPort80 = new javax.swing.JCheckBox();
        jCheckBoxPort21 = new javax.swing.JCheckBox();
        jCheckBoxPort67 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldOutros = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Novo Perfil");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("NOVO PERFIL");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jLabel2.setText("NOME:");

        jLabel3.setText("CRIPTOGRAFIA:");

        jCheckBoxWPA.setText("WPA");

        jCheckBoxWPA2.setText("WPA2");

        jCheckBoxWPAPSK.setText("WPA-PSK");

        jCheckBoxWPA2PSK.setText("WPA2-PSK");

        jCheckBoxWEP.setText("WEP");

        buttonGroup1.add(jRadioButtonRuim);
        jRadioButtonRuim.setText("Ruim");

        jLabel6.setText("INTENSIDADE SINAL:");

        buttonGroup1.add(jRadioButtonBom);
        jRadioButtonBom.setText("Bom");

        buttonGroup1.add(jRadioButtonExcelente);
        jRadioButtonExcelente.setText("Excelente");

        jButtonCriar.setText("Criar");
        jButtonCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCriarActionPerformed(evt);
            }
        });

        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        jLabel4.setText("PORTAS LIBERADAS:");

        jCheckBoxPort80.setText("80");

        jCheckBoxPort21.setText("21");

        jCheckBoxPort67.setText("67");

        jLabel5.setText("Outra:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jCheckBoxWPAPSK)
                                                    .addComponent(jCheckBoxWEP))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jCheckBoxWPA)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jCheckBoxWPA2))
                                                    .addComponent(jCheckBoxWPA2PSK)))
                                            .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jRadioButtonRuim)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jRadioButtonBom))
                                            .addComponent(jButtonCriar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jRadioButtonExcelente))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(28, 28, 28)
                                                .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextFieldOutros, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCheckBoxPort80)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxPort21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxPort67)))))
                        .addGap(0, 112, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBoxWEP)
                        .addComponent(jCheckBoxWPA)
                        .addComponent(jCheckBoxWPA2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxWPAPSK)
                    .addComponent(jCheckBoxWPA2PSK))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jRadioButtonRuim)
                    .addComponent(jRadioButtonBom)
                    .addComponent(jRadioButtonExcelente))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jCheckBoxPort80)
                    .addComponent(jCheckBoxPort21)
                    .addComponent(jCheckBoxPort67))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldOutros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCriar)
                    .addComponent(jButtonSair))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jButtonCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCriarActionPerformed
        // TODO add your handling code here:
        int op = JOptionPane.showConfirmDialog(null, "Deseja realmente inserir este Perfil?", "Inserir", JOptionPane.YES_NO_OPTION);
        if(op == 0) { 
            if(verificarEntradas()){ // Checa os campos antes de cadastrar os produtos
                
                Perfis perfil = new Perfis();
                PerfisDAO p = new PerfisDAO();
                
                perfil.setNome(jTextFieldNome.getText());
                int[] port = new int[10];
                int i = 0;
                
                if(jCheckBoxWEP.isSelected()){
                    perfil.setWEB(true);
                }
                if(jCheckBoxWPA.isSelected()){
                    perfil.setWPA(true);
                }
                if(jCheckBoxWPA2.isSelected()){
                    perfil.setWPA2(true);
                }
                if(jCheckBoxWPA2PSK.isSelected()){
                    perfil.setWPA2_PSK(true);
                }
                if(jCheckBoxWPAPSK.isSelected()){
                    perfil.setWPA_PSK(true);
                }
                if(jRadioButtonBom.isSelected()){
                    perfil.setIntensidadeSinal("Bom");
                }else if(jRadioButtonExcelente.isSelected()){
                    perfil.setIntensidadeSinal("Excelente");
                }else{
                    perfil.setIntensidadeSinal("Ruim");
                }
                if(jCheckBoxPort80.isSelected()){
                    port[i] = 80;
                    i++;
                }
                if(jCheckBoxPort67.isSelected()){
                    port[i] = 67;
                    i++;
                }
                if(jCheckBoxPort21.isSelected()){
                    port[i] = 21;
                    i++;
                }
                perfil.setPortas(port);
                p.criarPerfil(perfil);
                super.dispose();
            }
        }
    }//GEN-LAST:event_jButtonCriarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Perfil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Perfil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Perfil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Perfil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Perfil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonCriar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JCheckBox jCheckBoxPort21;
    private javax.swing.JCheckBox jCheckBoxPort67;
    private javax.swing.JCheckBox jCheckBoxPort80;
    private javax.swing.JCheckBox jCheckBoxWEP;
    private javax.swing.JCheckBox jCheckBoxWPA;
    private javax.swing.JCheckBox jCheckBoxWPA2;
    private javax.swing.JCheckBox jCheckBoxWPA2PSK;
    private javax.swing.JCheckBox jCheckBoxWPAPSK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonBom;
    private javax.swing.JRadioButton jRadioButtonExcelente;
    private javax.swing.JRadioButton jRadioButtonRuim;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldOutros;
    // End of variables declaration//GEN-END:variables

    private boolean verificarEntradas() {
        String t = jTextFieldNome.getText();
        if((t.length() == 0)){
            JOptionPane.showMessageDialog(null, "Por favor entre com um nome","Erro", 0);
            jTextFieldNome.requestFocus();
            return false;
        }
        if(!(jCheckBoxWEP.isSelected() || jCheckBoxWPA.isSelected() || jCheckBoxWPA2.isSelected()
                || jCheckBoxWPA2PSK.isSelected() || jCheckBoxWPAPSK.isSelected())){
            JOptionPane.showMessageDialog(null, "Por favor entre com um tipo de criptografia!","Erro", 0);
            return false;
        }
        if(!(jRadioButtonBom.isSelected() || jRadioButtonExcelente.isSelected() || jRadioButtonRuim.isSelected())){
            JOptionPane.showMessageDialog(null, "Por favor entre com um tipo de intensidade de sinal!","Erro", 0);
            return false;
        }
        t = jTextFieldOutros.getText();
        if(!(jCheckBoxPort80.isSelected() || jCheckBoxPort67.isSelected() || jCheckBoxPort21.isSelected() || (t.length() !=0))){
            int i = JOptionPane.showConfirmDialog(null, "Tem certeza que não há porta preferencia de porta liberada?!", "Portas", JOptionPane.YES_NO_OPTION);
            if(i != 0)
                return false;
        }
        
        return true;
    }
}
